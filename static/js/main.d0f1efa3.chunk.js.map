{"version":3,"sources":["system/mainFrame.tsx","system/contents/tbldfBuilder.tsx","system/contents/coddfBuilder.tsx","system/utils/defineUtil.tsx","system/tableBuilder.tsx","system/utils/resourseManager.tsx","system/contents/coldfBuilder.tsx","system/contents/kinouBuilder.tsx","system/contents/kubunBuilder.tsx","system/contents/cdkanBuilder.tsx","system/contents/knprpBuilder.tsx","system/contents/unprpBuilder.tsx","reportWebVitals.ts","index.tsx"],"names":["fileName","MainFrame","useState","focus","setFocus","resourseManager","setResourseManager","cash","setCash","contentsList","TbldfBuilder","ColdfBuilder","KinouBuilder","KubunBuilder","CoddfBuilder","CdkanBuilder","UnprpBuilder","KnprpBuilder","getFocusNoFromTabName","tabName","focusNo","forEach","v","i","headerJsxList","map","value","_Tab","isActive","onClick","resetFilter","outputAreaJsx","useMemo","target","getOutputAreaProps","columnInfoList","selectContents","_Frame","_SelectFileForm","isDisplay","_SelectFileButton","getFileText","then","ResourseManager","_TabFrame","_ContentsFrame","_FooterFrame","a","window","showOpenFilePicker","fileHandle","getFile","file","name","text","fileContents","JSON","parse","unZip","val","buffer","Buffer","from","result","zlib","unzipSync","decodeURIComponent","toString","styled","div","props","DefineUtil","TBLDF_TAB_NAME","columnName","num","width","convertListName","labelName","destTabName","COLDF_TAB_NAME","filterCondition","curRecord","destRecord","CODDF_TAB_NAME","CDKAN_TAB_NAME","convert","convertList","cell","find","TableBuilder","headerRef","useRef","bodyRef","filterList","setFilterList","returnFlag","setReturnFlag","recordList","getRecordList","parameter","length","filterCount","dispCount","useEffect","current","scrollTop","scrollLeft","columnInfo","_ColumnCell","filterJsxList","undefined","_FilterCell","type","onChange","e","slice","tableList","record","cellValue","afterConvertList","String","includes","resultCellList","push","bodyJsxList","cellJsxList","j","_BodyCell","isSelect","_Record","fotterAreaJsxList","functionList","fanc","_Button","onKeyDown","console","log","isEnable","setFilterCondition","_OutputCountArea","isFileName","_HeaderFrame","ref","_Header","_Body","key","preventDefault","keyEvent","tabIndex","onScroll","_Fotter","_CellBase","css","resourse","this","targetList","targetName","filter","KINOU_TAB_NAME","KUBUN_TAB_NAME","KNPRP_TAB_NAME","UNPRP_TAB_NAME","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0f1efa3.chunk.js","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport TbldfBuilder from './contents/tbldfBuilder';\nimport CoddfBuilder from './contents/coddfBuilder';\nimport ContentsBuilder from './contents/common/contentsBuilder';\nimport TableBuilder from './tableBuilder';\nimport ResourseManager from './utils/resourseManager';\nimport ColdfBuilder from './contents/coldfBuilder';\nimport KinouBuilder from './contents/kinouBuilder';\nimport KubunBuilder from './contents/kubunBuilder';\nimport CdkanBuilder from './contents/cdkanBuilder';\nimport zlib from \"zlib\";\nimport KnprpBuilder from './contents/knprpBuilder';\nimport UnprpBuilder from './contents/unprpBuilder';\n\n/** キャッシュ **/\nexport type CashInfo = {\n  // 検索欄の情報\n  filterList: string[];\n  // 選択されている箇所\n  focus: number;\n  // スクロール量(縦)\n  scrollTop: number;\n  // スクロール量(縦)\n  scrollLeft: number;\n};\n\n// 読み込んだファイル名\nlet fileName: String = '';\n\nconst MainFrame = () => {\n  // 選択中のタブ\n  const [focus, setFocus] = useState<number>(-1);\n  // 取得したファイルの中身\n  const [resourseManager, setResourseManager] = useState<null | ResourseManager>(null);\n\n  // 関連カラムから遷移した場合に保持するキャッシュ（フィルターリスト、フォーカス、スクロール量）\n  const [cash, setCash] = useState<CashInfo | null>(null);\n\n  const contentsList: ContentsBuilder[] = [\n    new TbldfBuilder(),\n    new ColdfBuilder(),\n    new KinouBuilder(),\n    new KubunBuilder(),\n    new CoddfBuilder(),\n    new CdkanBuilder(),\n    new UnprpBuilder(),\n    new KnprpBuilder()\n  ];\n\n  // 遷移先タブ名からfocus番号に変換\n  const getFocusNoFromTabName = (tabName: string): number => {\n    let focusNo = -1;\n    contentsList.forEach((v, i) => {\n      if (v.tabName() === tabName) focusNo = i;\n    })\n    setFocus(focusNo);\n    return focusNo;\n  };\n\n  // ヘッダー\n  const headerJsxList = contentsList.map((value, i) => {\n    return (\n      <_Tab isActive={focus === i} key={i} onClick={() => {\n        (resourseManager as ResourseManager).resetFilter();\n        setFocus(i);\n        setCash(null);\n      }}>{value.tabName()}</_Tab>\n    );\n  });\n\n  // 出力エリア\n  const outputAreaJsx = useMemo(() => {\n    if (focus === -1) {\n      return <></>;\n    }\n    const target = contentsList[focus].getOutputAreaProps().target;\n    const columnInfoList = contentsList[focus].getOutputAreaProps().columnInfoList;\n    return (\n      <TableBuilder\n        fileName={fileName}\n        resourseManager={resourseManager as ResourseManager}\n        target={target}\n        columnInfoList={columnInfoList}\n        selectContents={contentsList[focus]}\n        getFocusNoFromTabName={getFocusNoFromTabName}\n        cash={cash}\n        setCash={setCash}\n      ></TableBuilder>\n    );\n  }, [focus]);\n\n  return (\n    <_Frame>\n      <_SelectFileForm isDisplay={resourseManager == null}>\n        <_SelectFileButton onClick={() => {\n          getFileText().then((value) => {\n            setResourseManager(new ResourseManager(value));\n          });\n        }}>ファイルを選択</_SelectFileButton>\n      </_SelectFileForm>\n\n      <_TabFrame>{headerJsxList}</_TabFrame>\n      <_ContentsFrame>{outputAreaJsx}</_ContentsFrame>\n      <_FooterFrame>{'　Copyright ikegami v1.1(2023/01/05)　'}</_FooterFrame>\n    </_Frame>\n  );\n};\n\nexport default MainFrame;\n\n// 選択したファイルの中身(JSON)を取得\nconst getFileText = async () => {\n  const [fileHandle] = await window.showOpenFilePicker();\n  const file = await fileHandle.getFile();\n  fileName = file.name;\n  const fileContents = await file.text();\n  return JSON.parse(unZip(fileContents));\n};\n\n// 圧縮された文字列を複号する\nexport const unZip = (val: string) => {\n  // base64 => Bufferに変換\n  const buffer = Buffer.from(val, 'base64')\n  // 復号化\n  const result = zlib.unzipSync(buffer)\n  // デコード\n  const str = decodeURIComponent(result.toString())\n  return str;\n}\n\n// ファイル選択前エリア\nconst _SelectFileForm = styled.div<{\n  isDisplay: boolean;\n}>`\n  display: ${props => props.isDisplay ? 'block' : 'none'};\n  background-color: #0000007f;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 20;\n`;\n\n// ファイルを選択ボタン\nconst _SelectFileButton = styled.div`\n  display: inline-block;\n  background-color:#eef5ff;\n  height: 40px;\n  width: 250px;\n  font-size: 30px;\n  text-align: center;\n  border: 1px solid #919191;\n  border-radius: 5px;\n  top: 50%;\n  left: 50%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n`;\n\n// フレーム\nconst _Frame = styled.div`\n  height: 100%;\n  width: 100%;\n  display: inline-block;\n`;\n\n// タブエリア\nconst _TabFrame = styled.div`\n  height: calc(100% - 15px);\n  width: 110px; \n  display: inline-block;\n  background-color: #f8faba;\n`;\n\n// タブ\nconst _Tab = styled.div<{\n  isActive: boolean;\n}>`\n  cursor: pointer;\n  background-color: ${props => props.isActive ? '#ffad42' : '#ffc06d'};\n  display: inline-block;\n  font-size: 13px;\n  text-align: center;\n  width: 100px;\n  height: 40px;\n  line-height: 40px;\n  margin-left: 5px;\n  margin-top: 5px;\n  font-weight: bold;\n`;\n\n// コンテンツエリア\nconst _ContentsFrame = styled.div`\n  height: calc(100% - 15px);\n  width: calc(100% - 110px);\n  background-color: #ffe18d;\n  vertical-align: top;\n  display: inline-block;\n  padding-left: 5px;\n  padding-top: 5px;\n  box-sizing: border-box;\n`;\n\n// フッターエリア\nconst _FooterFrame = styled.div`\n  height: 15px;\n  width: 100%;\n  background-color: #fff78c;\n  font-size: 10px;\n  display: inline-block;\n  text-align: right;\n`","import ContentsBuilder from \"./common/contentsBuilder\";\r\nimport ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\n\r\nclass TbldfBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.TBLDF_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'tbldfList',\r\n            columnInfoList: [\r\n                { columnName: 'テーブルID', num: 0, width: 80 },\r\n                { columnName: 'テーブル名', num: 1, width: 330 },\r\n                { columnName: 'グループ', num: 2, width: 150, convertListName: 'tblgr' },\r\n                { columnName: '概要', num: 3, width: 400 },\r\n                { columnName: 'サブシステム', num: 4, width: 180, convertListName: 'tblsb' },\r\n                { columnName: '連番', num: 5, width: 35 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return [\r\n            {\r\n                labelName: '関連カラム', destTabName: DefineUtil.COLDF_TAB_NAME, filterCondition: (curRecord: string[], destRecord: string[]) => {\r\n                    return curRecord[0] === destRecord[0];\r\n                }\r\n            }\r\n        ];\r\n    };\r\n};\r\n\r\nexport default TbldfBuilder;\r\n\r\n","import ContentsBuilder from \"./common/contentsBuilder\";\r\nimport ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\n\r\nclass CoddfBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.CODDF_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'coddfList',\r\n            columnInfoList: [\r\n                { columnName: 'サブシステム', num: 0, width: 130, convertListName: 'codsb' },\r\n                { columnName: 'コード分類', num: 1, width: 80 },\r\n                { columnName: 'コード名称（正式）', num: 2, width: 180 },\r\n                { columnName: 'コード名称（略称）', num: 3, width: 180 },\r\n                { columnName: 'コード名称（通称）', num: 4, width: 180 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return [\r\n            {\r\n                labelName: '管理情報', destTabName: DefineUtil.CDKAN_TAB_NAME, filterCondition: (curRecord: string[], destRecord: string[]) => {\r\n                    return curRecord[1] === destRecord[0];\r\n                }\r\n            }\r\n        ];\r\n    };\r\n};\r\n\r\nexport default CoddfBuilder;","namespace DefineUtil {\r\n    // タブ名\r\n    export const TBLDF_TAB_NAME = 'テーブル';\r\n    export const COLDF_TAB_NAME = 'カラム';\r\n    export const KINOU_TAB_NAME = '機能';\r\n    export const KUBUN_TAB_NAME = '区分';\r\n    export const CODDF_TAB_NAME = 'コード';\r\n    export const CDKAN_TAB_NAME = '管理情報';\r\n    export const UNPRP_TAB_NAME = '運用プロパティ';\r\n    export const KNPRP_TAB_NAME = '機能プロパティ';\r\n}\r\n\r\nexport default DefineUtil;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport ContentsBuilder from \"./contents/common/contentsBuilder\";\r\nimport { CashInfo } from \"./mainFrame\";\r\nimport ContentsUtil from \"./utils/contentsUtil\";\r\nimport ResourseManager from \"./utils/resourseManager\";\r\n\r\nconst TableBuilder = (props: {\r\n    fileName: String;\r\n    resourseManager: ResourseManager;\r\n    target: string;\r\n    columnInfoList: ContentsUtil.ColumnInfo[];\r\n    selectContents: ContentsBuilder;\r\n    getFocusNoFromTabName: (tabName: string) => number;\r\n    cash: CashInfo | null;\r\n    setCash: React.Dispatch<React.SetStateAction<CashInfo | null>>;\r\n}) => {\r\n\r\n    const headerRef = useRef<null | HTMLDivElement>(null);\r\n    const bodyRef = useRef<null | HTMLDivElement>(null);\r\n\r\n    // 選択中のレコード\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    // 検索エリアの値\r\n    const [filterList, setFilterList] = useState<string[]>([]);\r\n    // 戻るボタンを押下したフラグ\r\n    const [returnFlag, setReturnFlag] = useState<boolean>(false);\r\n\r\n    // レコード\r\n    const recordList = props.resourseManager.getRecordList(props.target);\r\n\r\n    // 母数\r\n    const parameter = recordList.length;\r\n    // フィルター後の件数\r\n    let filterCount = recordList.length;\r\n    // 表示件数\r\n    let dispCount = 0;\r\n\r\n    // 選択タブ変更時の初期化\r\n    useEffect(() => {\r\n        if (props.cash != null && returnFlag) {\r\n            // 戻るボタンから遷移したとき\r\n            setFocus(props.cash.focus);\r\n            setFilterList(props.cash.filterList);\r\n            setReturnFlag(false);\r\n            if (bodyRef.current != null) {\r\n                bodyRef.current.scrollTop = props.cash.scrollTop;\r\n                bodyRef.current.scrollLeft = props.cash.scrollLeft;\r\n            }\r\n        } else {\r\n            // 戻るボタン以外から遷移したとき\r\n            setFocus(-1);\r\n            setFilterList([]);\r\n            if (bodyRef.current != null) {\r\n                bodyRef.current.scrollTop = 0;\r\n                bodyRef.current.scrollLeft = 0;\r\n            }\r\n        }\r\n    }, [props.target]);\r\n\r\n    // ヘッダーを作成\r\n    const headerJsxList = props.columnInfoList.map((columnInfo, i) => {\r\n        return <_ColumnCell width={columnInfo.width} key={i}>{columnInfo.columnName}</_ColumnCell>;\r\n    });\r\n\r\n    // フィルターを作成\r\n    const filterJsxList = props.columnInfoList.map((columnInfo, i) => {\r\n        const cell = filterList[i] != undefined ? filterList[i] : '';\r\n        return (<_FilterCell width={columnInfo.width} key={i}><input type=\"text\" value={cell} onChange={(e) => {\r\n            if (focus != -1) { setFocus(-1) };\r\n            filterList[i] = e.target.value;\r\n            setFilterList(filterList.slice());\r\n        }}></input></_FilterCell>);\r\n    });\r\n\r\n    // テーブル(body)を作成\r\n    const result: string[][] = useMemo(() => {\r\n        let tableList: any[][] = [];\r\n        if (filterList.length !== 0) {\r\n            recordList.forEach((record) => {\r\n                // booleanのリスト\r\n                const isFilterList: boolean[] = record.map((cell, i) => {\r\n                    let cellValue: any = cell;\r\n                    if (props.columnInfoList[i].convertListName != undefined) {\r\n                        const convertList = props.resourseManager.getRecordList('defineList', (props.columnInfoList[i].convertListName) as string);\r\n                        const afterConvertList = convert(convertList, cell);\r\n                        cellValue = afterConvertList != undefined ? afterConvertList[2] : '-';\r\n                    }\r\n                    return String(cellValue).includes(filterList[i] || '');\r\n                });\r\n\r\n                // ↑ isFilterListにfalseが存在する列を表示しない\r\n                if (!(isFilterList.includes(false))) {\r\n                    const resultCellList = record.map((cell) => { return cell })\r\n                    tableList.push(resultCellList);\r\n                };\r\n            })\r\n        } else {\r\n            tableList = recordList;\r\n        };\r\n        filterCount = tableList.length;\r\n        return tableList;\r\n    }, [props.target, filterList]);\r\n\r\n    const bodyJsxList: JSX.Element[] = [];\r\n    let cellJsxList: JSX.Element[] = [];\r\n    // 最大100件表示する\r\n    for (let i = 0; result.length >= 100 ? i < 100 : i < result.length; i++) {\r\n        cellJsxList = result[i].map((cell, j) => {\r\n            // convertNameが存在すれば変換する\r\n            let cellValue: any = cell;\r\n            if (props.columnInfoList[j].convertListName != undefined) {\r\n                const convertList = props.resourseManager.getRecordList('defineList', (props.columnInfoList[j].convertListName) as string);\r\n                const afterConvertList = convert(convertList, cell);\r\n                cellValue = afterConvertList != undefined ? afterConvertList[2] : '-';\r\n            }\r\n            return (\r\n                <_BodyCell width={props.columnInfoList[j].width} isSelect={focus === i} key={j} onClick={() => {\r\n                    setFocus(i);\r\n                }}>{cellValue}</_BodyCell>\r\n            );\r\n        });\r\n        dispCount = i + 1;\r\n        bodyJsxList.push(<_Record key={i}>{cellJsxList}</_Record>);\r\n    }\r\n\r\n    // フッターを作成\r\n    const fotterAreaJsxList = props.selectContents.functionList().map((fanc, i) => {\r\n        if (fanc.labelName === '戻る') {\r\n            return < _Button onKeyDown={() => console.log('!!')} isEnable={true} isDisplay={props.cash != null} key={i} onClick={() => {\r\n                props.resourseManager.resetFilter();\r\n                props.getFocusNoFromTabName(fanc.destTabName);\r\n                setReturnFlag(true);\r\n            }}> {fanc.labelName} </_Button>;\r\n        } else {\r\n            return < _Button isEnable={focus !== -1} isDisplay={true} key={i} onClick={() => {\r\n                if (bodyRef.current != null && headerRef.current != null) {\r\n                    props.setCash({ filterList: filterList, focus: focus, scrollTop: bodyRef.current.scrollTop, scrollLeft: bodyRef.current.scrollLeft });\r\n                }\r\n                props.resourseManager.setFilterCondition((destRecord: string[]) => fanc.filterCondition(result[focus], destRecord));\r\n                props.getFocusNoFromTabName(fanc.destTabName);\r\n            }}> {fanc.labelName} </_Button>;\r\n        }\r\n    });\r\n\r\n    // 矢印キー押下時の動作\r\n    const keyEvent = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        switch (e.key) {\r\n            case 'ArrowUp':\r\n                if (focus > 0) setFocus(focus - 1);\r\n                e.preventDefault();\r\n                break;\r\n            case 'ArrowDown':\r\n                if (focus != -1 && focus < dispCount - 1) setFocus(focus + 1);\r\n                e.preventDefault();\r\n                break;\r\n            case 'ArrowLeft':\r\n                props.selectContents.functionList().forEach((fanc) => {\r\n                    if (fanc.labelName === '戻る' && props.cash != null) {\r\n                        props.resourseManager.resetFilter();\r\n                        props.getFocusNoFromTabName(fanc.destTabName);\r\n                        setReturnFlag(true);\r\n                    }\r\n                })\r\n                e.preventDefault();\r\n                break;\r\n            case 'ArrowRight':\r\n                props.selectContents.functionList().forEach((fanc) => {\r\n                    if (fanc.labelName !== '戻る') {\r\n                        if (bodyRef.current != null && headerRef.current != null) {\r\n                            props.setCash({ filterList: filterList, focus: focus, scrollTop: bodyRef.current.scrollTop, scrollLeft: bodyRef.current.scrollLeft });\r\n                        }\r\n                        props.resourseManager.setFilterCondition((destRecord: string[]) => fanc.filterCondition(result[focus], destRecord));\r\n                        props.getFocusNoFromTabName(fanc.destTabName);\r\n                    }\r\n                })\r\n                e.preventDefault();\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <_Frame>\r\n            <_ContentsFrame>\r\n                <_OutputCountArea isFileName={true}>{props.fileName}</_OutputCountArea>\r\n                <_OutputCountArea>{`母数：${parameter}件　フィルター：${filterCount}件　表示：${dispCount}件`}</_OutputCountArea>\r\n                <_HeaderFrame ref={headerRef}>\r\n                    <_Header>{headerJsxList}</_Header>\r\n                    <_Header>{filterJsxList}</_Header>\r\n                </_HeaderFrame>\r\n                <_Body onKeyDown={e => keyEvent(e)} tabIndex={0} ref={bodyRef} onScroll={() => {\r\n                    if (bodyRef.current != null && headerRef.current != null) {\r\n                        headerRef.current.scrollLeft = bodyRef.current.scrollLeft;\r\n                    }\r\n                }}>{bodyJsxList}</_Body>\r\n            </_ContentsFrame>\r\n            <_Fotter>{fotterAreaJsxList}</_Fotter>\r\n        </_Frame>\r\n    );\r\n};\r\n\r\n// 変換\r\nconst convert = (convertList: string[][], cell: string) => {\r\n    return convertList.find(value => {\r\n        if (value[1] === cell) { return value[2] }\r\n    });\r\n};\r\n\r\nexport default TableBuilder;\r\n\r\n// フレーム\r\nconst _Frame = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: inline-block;\r\n`;\r\n\r\n// テーブル出力のエリア\r\nconst _ContentsFrame = styled.div`\r\n  height: calc(100% - 40px);\r\n  width: 100%;\r\n  display: inline-block;\r\n`;\r\n\r\nconst _HeaderFrame = styled.div`\r\n    width: calc(100% - 14px);\r\n    overflow: hidden;\r\n`;\r\n\r\n// ヘッダー\r\nconst _Header = styled.div`\r\n    height: 25px;\r\n    width: 100%;\r\n    display: block;\r\n    white-space: nowrap;\r\n`;\r\n\r\n// ボディ\r\nconst _Body = styled.div`\r\n    outline:none;\r\n    height: calc(100% - 100px);\r\n    width: 100%;\r\n    background-color: #f8faba;\r\n    display: inline-block;\r\n    overflow: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\n// ファイル名、出力件数エリア\r\nconst _OutputCountArea = styled.div<{\r\n    isFileName?: boolean\r\n}>`\r\n    font-weight: ${props => props.isFileName ? 'bold' : ''};\r\n    color: ${props => props.isFileName ? '#d82f00' : ''};\r\n    height: 25px;\r\n    width: 100%;\r\n    font-size: 15px;\r\n`;\r\n\r\n// レコード\r\nconst _Record = styled.div`\r\n    display: block;\r\n    height: 25px;\r\n`;\r\n\r\n// セル\r\nconst _CellBase = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    font-size: 15px;\r\n    border: 1px solid #1a1a1a;\r\n    vertical-align: top;\r\n    width: ${props => props.width}px;\r\n    height: 25px;\r\n`;\r\n\r\n// セル(カラム名)\r\nconst _ColumnCell = styled(_CellBase)`\r\n    background-color: #ffbc37;\r\n`;\r\n\r\n// セル(フィルター)\r\nconst _FilterCell = styled(_CellBase)`\r\n    & input {\r\n        width: 100%;\r\n        box-sizing: border-box; \r\n    }\r\n`;\r\n\r\n// セル(ボディ)\r\nconst _BodyCell = styled(_CellBase) <{\r\n    isSelect: boolean;\r\n}>`\r\n    background-color: ${props => props.isSelect ? '#fffc37' : 'white'};\r\n`;\r\n\r\n// フッター\r\nconst _Fotter = styled.div`\r\n  height: 40px;\r\n  width: 100%;\r\n  background-color: #ffd768;\r\n  display: inline-block;\r\n`;\r\n\r\n// 表示ボタン\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isDisplay: boolean;\r\n}>`\r\n  background-color: #eef5ff;\r\n\r\n  // 非活性処理\r\n  ${props => props.isEnable ? '' : css`\r\n    pointer-events: none;\r\n    background-color: #acb2ba;\r\n  `}\r\n\r\n  // 非表示処理\r\n  display: ${props => props.isDisplay ? 'inline-block' : 'none'};\r\n\r\n  font-size: 15px;\r\n  width: 100px;\r\n  height: calc(100% - 10px);\r\n  text-align: center;\r\n  margin-top: 5px;\r\n  margin-left: 5px;\r\n  border: 1px solid #919191;\r\n  border-radius: 5px;\r\n  line-height: 30px;\r\n  &:hover {\r\n      background-color:#b1bff5;\r\n  }\r\n`;","class ResourseManager {\r\n    private resourse: any;\r\n\r\n    private filterCondition: (record: string[]) => boolean;\r\n\r\n    constructor(resourse: any) {\r\n        this.resourse = resourse;\r\n        this.filterCondition = () => { return true };\r\n    }\r\n\r\n    public setFilterCondition(filterCondition: (record: string[]) => boolean) {\r\n        this.filterCondition = filterCondition;\r\n    }\r\n\r\n    /** 初期化(常に全部表示(true)する) */\r\n    public resetFilter() {\r\n        this.filterCondition = () => { return true };\r\n    }\r\n\r\n    /**\r\n     * テーブルの取得\r\n     * @param targetList テーブル名\r\n     * @param targetName defineListを識別する値\r\n     * @returns テーブル\r\n     */\r\n    public getRecordList(targetList: string, targetName?: string) {\r\n        return (this.resourse[targetList] as string[][]).filter((record) => {\r\n            if (targetName != undefined) {\r\n                if (record[0] === targetName) {\r\n                    return this.filterCondition(record);\r\n                }\r\n            } else {\r\n                return this.filterCondition(record);\r\n            };\r\n        });\r\n    }\r\n};\r\n\r\nexport default ResourseManager;\r\n","import ContentsBuilder from \"./common/contentsBuilder\";\r\nimport ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\n\r\nclass ColdfBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.COLDF_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'coldfList',\r\n            columnInfoList: [\r\n                { columnName: 'テーブルID', num: 0, width: 80 },\r\n                { columnName: 'カラムID', num: 1, width: 80 },\r\n                { columnName: 'カラム名', num: 2, width: 330 },\r\n                { columnName: 'ドメイン', num: 3, width: 330 },\r\n                { columnName: 'キー', num: 4, width: 35 },\r\n                { columnName: '必須', num: 5, width: 35 },\r\n                { columnName: '連番', num: 6, width: 35 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return [\r\n            {\r\n                labelName: '戻る', destTabName: DefineUtil.TBLDF_TAB_NAME, filterCondition: () => { return true }\r\n            }\r\n        ];;\r\n    };\r\n};\r\n\r\nexport default ColdfBuilder;","import ContentsBuilder from \"./common/contentsBuilder\";\r\nimport ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\n\r\nclass KinouBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.KINOU_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'kinouList',\r\n            columnInfoList: [\r\n                { columnName: '系統', num: 0, width: 150, convertListName: 'knoke' },\r\n                { columnName: 'サブシステム', num: 1, width: 100, convertListName: 'knosb' },\r\n                { columnName: 'カテゴリ', num: 2, width: 180, convertListName: 'knocg' },\r\n                { columnName: '機能名', num: 3, width: 400 },\r\n                { columnName: '機能ID', num: 4, width: 80 },\r\n                { columnName: '種別', num: 5, width: 100, convertListName: 'knosy' },\r\n                { columnName: '概要', num: 6, width: 1600 },\r\n                { columnName: 'リリースバージョン', num: 7, width: 150 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return [];\r\n    };\r\n};\r\n\r\nexport default KinouBuilder;","import ContentsBuilder from \"./common/contentsBuilder\";\r\nimport ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\n\r\nclass KubunBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.KUBUN_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'kubunList',\r\n            columnInfoList: [\r\n                { columnName: 'サブシステム', num: 0, width: 100, convertListName: 'kbnsb' },\r\n                { columnName: '区分分類名(正式)', num: 1, width: 230, convertListName: 'kbnbs' },\r\n                { columnName: '区分分類名(通称)', num: 2, width: 230, convertListName: 'kbnbt' },\r\n                { columnName: '区分値', num: 3, width: 200 },\r\n                { columnName: '区分名(正式)', num: 4, width: 700 },\r\n                { columnName: '区分名(略称)', num: 5, width: 150 },\r\n                { columnName: '区分名(通称)', num: 6, width: 350 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return [];\r\n    };\r\n};\r\n\r\nexport default KubunBuilder;","import ContentsUtil from \"../utils/contentsUtil\";\r\nimport ContentsBuilder from \"./common/contentsBuilder\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\n\r\nclass CdkanBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.CDKAN_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'cdkanList',\r\n            columnInfoList: [\r\n                { columnName: 'コード分類', num: 0, width: 80 },\r\n                { columnName: '管理情報', num: 1, width: 80 },\r\n                { columnName: '管理情報名', num: 2, width: 200 },\r\n                { columnName: '内容', num: 3, width: 1000 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return [{\r\n            labelName: '戻る', destTabName: DefineUtil.CODDF_TAB_NAME, filterCondition: () => { return true }\r\n        }];\r\n    };\r\n};\r\n\r\nexport default CdkanBuilder;","import ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\nimport ContentsBuilder from \"./common/contentsBuilder\";\r\n\r\nclass KnprpBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.KNPRP_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'knprpList',\r\n            columnInfoList: [\r\n                { columnName: 'サブシステム', num: 0, width: 180, convertListName: 'uprsb' },\r\n                { columnName: '機能識別名', num: 1, width: 100, convertListName: 'kprkn' },\r\n                { columnName: 'プロパティ表題', num: 2, width: 500 },\r\n                { columnName: 'プロパティ名', num: 3, width: 200 },\r\n                { columnName: 'プロパティ値', num: 4, width: 600 },\r\n                { columnName: '概要', num: 5, width: 1500 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return[];\r\n    };\r\n};\r\n\r\nexport default KnprpBuilder;","import ContentsUtil from \"../utils/contentsUtil\";\r\nimport DefineUtil from \"../utils/defineUtil\";\r\nimport ContentsBuilder from \"./common/contentsBuilder\";\r\n\r\nclass UnprpBuilder implements ContentsBuilder {\r\n    tabName(): string {\r\n        return DefineUtil.UNPRP_TAB_NAME;\r\n    };\r\n    getOutputAreaProps(): ContentsUtil.OutputAreaInfo {\r\n        return {\r\n            target: 'unprpList',\r\n            columnInfoList: [\r\n                { columnName: 'サブシステム', num: 0, width: 180, convertListName: 'uprsb' },\r\n                { columnName: '運用条件区分', num: 1, width: 200, convertListName: 'upruk' },\r\n                { columnName: '運用条件表題', num: 2, width: 500 },\r\n                { columnName: '運用条件名', num: 3, width: 300 },\r\n                { columnName: 'デフォルト値', num: 4, width: 1500 },\r\n                { columnName: '概要', num: 5, width: 2800 }\r\n            ]\r\n        }\r\n    };\r\n    functionList(): ContentsUtil.FunctionInfo[] {\r\n        return[];\r\n    };\r\n};\r\n\r\nexport default UnprpBuilder;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MainFrame from './system/mainFrame';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <MainFrame />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}